name: Upload Python Package

on:
  push:
    branches: '**'

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install
          pipenv install --dev

      - name: Test with pytest
        run: |
          pipenv run test

      - name: Stop pipeline on test failure
        if: ${{ failure() }}
        run: exit 1

      - name: Linting with pylint
        run: |
          pipenv run lint

      - name: Formating with black
        run: |
          pipenv run format
  
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/feat/creation-image-docker-dans-le-pipeline'
        uses: docker/build-push-action@v4  
        env:
          S_HOST: ${{secrets.HOST}}
          S_TOKEN: ${{secrets.TOKEN}}
          S_TICKET: ${{secrets.TICKETS}}
          S_T_MAX: ${{secrets.T_MAX}}
          S_T_MIN: ${{secrets.T_MIN}}
          S_DATABASE: ${{secrets.DATABASE}}
        with:
          context: .
          push: true
          tags: JereDaco/oxygen-cs:latest
          labels: build_id=${{ github.run_id }}
        #run: docker build -t oxygen-cs:latest --build-arg HOST=$S_HOST --build-arg TOKEN=$S_TOKEN --build-arg TICKETS=$S_TICKET --build-arg T_MAX=$S_T_MAX --build-arg T_MIN=$S_T_MIN --build-arg DATABASE=$S_DATABASE . 
        #run: HOST=$S_HOST TOKEN=$S_TOKEN TICKETS=$S_TICKET T_MAX=$S_T_MAX T_MIN=$S_T_MIN DATABASE=$S_DATABASE pipenv run start